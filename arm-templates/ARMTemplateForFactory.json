{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "azfar-adf-dev"
        },
        "ls_adls2_accountKey": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for 'accountKey' of 'ls_adls2'"
            }
        },
        "ls_azureblobstorage_connectionString": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for 'connectionString' of 'ls_azureblobstorage'"
            }
        },
        "ls_azurefunction_functionKey": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for 'functionKey' of 'ls_azurefunction'"
            }
        },
        "ls_azurefunction_transfermarkt_functionKey": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for 'functionKey' of 'ls_azurefunction_transfermarkt'"
            }
        },
        "ls_azuresqldatabase_connectionString": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for 'connectionString' of 'ls_azuresqldatabase'"
            }
        },
        "ls_adls2_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://azfarsadev.dfs.core.windows.net/"
        },
        "ls_azurefunction_properties_typeProperties_functionAppUrl": {
            "type": "string",
            "defaultValue": "https://fantasy-premier-league.azurewebsites.net"
        },
        "ls_azurefunction_transfermarkt_properties_typeProperties_functionAppUrl": {
            "type": "string",
            "defaultValue": "https://transfermarkt-dev.azurewebsites.net"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Data_Quality_Check_FPL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "player_metadata_data_quality_sp",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "current_season_history_data_quality_sp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[player_metadata_data_quality_sp]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "team_metadata_data_quality_sp",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "player_metadata_data_quality_sp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[team_metdata_data_quality_sp]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "get_latest_fixture_round",
                        "description": "",
                        "type": "Script",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "SELECT [latest_loaded_round]\nFROM [fpl_dev].[current_season_history_metadata]"
                                }
                            ],
                            "scriptBlockExecutionTimeout": "02:00:00"
                        }
                    },
                    {
                        "name": "current_season_history_data_quality_sp",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "get_latest_fixture_round",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[current_season_history_data_quality_sp]",
                            "storedProcedureParameters": {
                                "Fixture_Round": {
                                    "value": {
                                        "value": "@activity('get_latest_fixture_round').output.resultSets[0].rows[0].latest_loaded_round",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "DATA_QUALITY"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-18T09:11:05Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azuresqldatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ING_FPL_API')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "extract_main_metadata",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": "Extract_main_api_1",
                            "headers": {},
                            "method": "GET"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azurefunction",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "extract_current_season_history",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "extract_main_metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": "Extract_player_api_2",
                            "headers": {},
                            "method": "GET"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azurefunction",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "archive_file",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "extract_current_season_history",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": "Archive_file",
                            "headers": {},
                            "method": "GET"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azurefunction",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "RAW"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-20T12:37:19Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azurefunction')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ING_TRANSFERMARKT_API')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "extract_transfermarkt_player_data",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": {
                                "value": "@concat('startOrchestrator/my_orchestrator?epl_season=', string(pipeline().parameters.season))",
                                "type": "Expression"
                            },
                            "headers": {},
                            "method": "GET"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azurefunction_transfermarkt",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Until1",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "extract_transfermarkt_player_data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(or(equals(activity('CheckStatus').output.runtimeStatus, 'Pending'), equals(activity('CheckStatus').output.runtimeStatus, 'Running')))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Wait1",
                                    "type": "Wait",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": 30
                                    }
                                },
                                {
                                    "name": "CheckStatus",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "GET",
                                        "headers": {},
                                        "url": {
                                            "value": "@activity('extract_transfermarkt_player_data').output.statusQueryGetUri",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "0.12:00:00"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "season": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "RAW"
                },
                "annotations": [],
                "lastPublishTime": "2024-05-23T08:34:02Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azurefunction_transfermarkt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PARENT_FPL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "STG_FPL_FULL_LOAD",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ING_FPL_API",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "STG_FPL_FULL_LOAD",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "ING_FPL_API",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ING_FPL_API",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Parent_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-28T03:46:28Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/STG_FPL_FULL_LOAD')]",
                "[concat(variables('factoryId'), '/pipelines/ING_FPL_API')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SCD_FPL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "merge_scd_player_dim_sp",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[merge_scd_player_dim_sp]"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "DATA_TRANSFORMATION"
                },
                "annotations": [],
                "lastPublishTime": "2024-02-16T03:33:55Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azuresqldatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/STG_FPL_FULL_LOAD')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "dataset": {
                                "referenceName": "ds_excel",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup1').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "set_variable_source_file",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "test",
                                        "value": {
                                            "value": "@item().source_file_path",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "adls_to_stg",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Metadata1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "JsonSource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": false,
                                                "wildcardFolderPath": {
                                                    "value": "@concat(variables('test'), '/', activity('Get Metadata1').output.childItems[0].name)",
                                                    "type": "Expression"
                                                },
                                                "wildcardFileName": "*.json",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "JsonReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "@concat('truncate table [fpl_dev].', variables('test_destination_table'))",
                                                "type": "Expression"
                                            },
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": false
                                        },
                                        "enableStaging": false,
                                        "enableSkipIncompatibleRow": true,
                                        "logSettings": {
                                            "enableCopyActivityLog": true,
                                            "copyActivityLogSettings": {
                                                "logLevel": "Warning",
                                                "enableReliableLogging": false
                                            },
                                            "logLocationSettings": {
                                                "linkedServiceName": {
                                                    "referenceName": "ls_adls2",
                                                    "type": "LinkedServiceReference"
                                                },
                                                "path": "metadata"
                                            }
                                        },
                                        "dataIntegrationUnits": 2
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_json",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "db_azuresqldatabase",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "schema": "fpl_dev",
                                                "table_name": {
                                                    "value": "@variables('test_destination_table')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "set_variable_table_name",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "test_destination_table",
                                        "value": {
                                            "value": "@item().destination_table",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Get Metadata1",
                                    "type": "GetMetadata",
                                    "dependsOn": [
                                        {
                                            "activity": "set_variable_source_file",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "set_variable_table_name",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "Binary1",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "file_path": {
                                                    "value": "@variables('test')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "childItems"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "test": {
                        "type": "String"
                    },
                    "test_array": {
                        "type": "Array"
                    },
                    "test_destination_table": {
                        "type": "String"
                    },
                    "date_name": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "STG"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-27T18:08:59Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_excel')]",
                "[concat(variables('factoryId'), '/datasets/ds_json')]",
                "[concat(variables('factoryId'), '/datasets/db_azuresqldatabase')]",
                "[concat(variables('factoryId'), '/datasets/Binary1')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WIP_Current_Season_History_Data_Quality')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get_latest_fixture_round",
                        "description": "",
                        "type": "Script",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "SELECT [latest_loaded_round]\nFROM [fpl_dev].[current_season_history_metadata]"
                                }
                            ],
                            "scriptBlockExecutionTimeout": "02:00:00"
                        }
                    },
                    {
                        "name": "current_season_history_data_quality_sp",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "get_latest_fixture_round",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[current_season_history_data_quality_sp]",
                            "storedProcedureParameters": {
                                "Fixture_Round": {
                                    "value": {
                                        "value": "@activity('get_latest_fixture_round').output.resultSets[0].rows[0].latest_loaded_round",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azuresqldatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "DATA_QUALITY"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-18T09:02:43Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azuresqldatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Ingest Date",
                        "description": "To generate ingest date",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ingest_date",
                            "value": {
                                "value": "@formatDateTime(addHours(utcnow(), 8), 'ddMMyyyy')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Azure Function1",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "Ingest Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": {
                                "value": "@concat('Archive_file?data_source=team_metadata&file_date=', variables('ingest_date'))",
                                "type": "Expression"
                            },
                            "headers": {},
                            "method": "GET"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_azurefunction",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "ingest_date": {
                        "type": "String",
                        "defaultValue": "11"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-08-22T02:10:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azurefunction')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Binary1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_azureblobstorage",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "file_path": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@dataset().file_path",
                            "type": "Expression"
                        },
                        "container": "bronze"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azureblobstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Binary2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "position_metadata/current",
                        "fileSystem": "bronze"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/db_azuresqldatabase')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_azuresqldatabase",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "schema": {
                        "type": "string",
                        "defaultValue": null
                    },
                    "table_name": {
                        "type": "string",
                        "defaultValue": null
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().schema",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().table_name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azuresqldatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_excel')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": "Sheet1",
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "fpl_metadata.xlsx",
                        "folderPath": "fantasy_premier_league",
                        "fileSystem": "metadata"
                    },
                    "firstRowAsHeader": true
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_azureblobstorage",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "teams_metadata_08022024.json",
                        "folderPath": "teams_metadata/current/08022024",
                        "container": "bronze"
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "draw": {
                            "type": "integer"
                        },
                        "form": {
                            "type": "null"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "loss": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "played": {
                            "type": "integer"
                        },
                        "points": {
                            "type": "integer"
                        },
                        "position": {
                            "type": "integer"
                        },
                        "short_name": {
                            "type": "string"
                        },
                        "strength": {
                            "type": "integer"
                        },
                        "team_division": {
                            "type": "null"
                        },
                        "unavailable": {
                            "type": "boolean"
                        },
                        "win": {
                            "type": "integer"
                        },
                        "strength_overall_home": {
                            "type": "integer"
                        },
                        "strength_overall_away": {
                            "type": "integer"
                        },
                        "strength_attack_home": {
                            "type": "integer"
                        },
                        "strength_attack_away": {
                            "type": "integer"
                        },
                        "strength_defence_home": {
                            "type": "integer"
                        },
                        "strength_defence_away": {
                            "type": "integer"
                        },
                        "pulse_id": {
                            "type": "integer"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_azureblobstorage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_adls2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_adls2_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_adls2_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_azureblobstorage')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('ls_azureblobstorage_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_azurefunction')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureFunction",
                "typeProperties": {
                    "functionAppUrl": "[parameters('ls_azurefunction_properties_typeProperties_functionAppUrl')]",
                    "authentication": "Anonymous",
                    "functionKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_azurefunction_functionKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_azurefunction_transfermarkt')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureFunction",
                "typeProperties": {
                    "functionAppUrl": "[parameters('ls_azurefunction_transfermarkt_properties_typeProperties_functionAppUrl')]",
                    "authentication": "Anonymous",
                    "functionKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_azurefunction_transfermarkt_functionKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_azuresqldatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('ls_azuresqldatabase_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/default')]",
            "type": "Microsoft.DataFactory/factories/globalparameters",
            "apiVersion": "2018-06-01",
            "properties": {},
            "dependsOn": []
        }
    ]
}